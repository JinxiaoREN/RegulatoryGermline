name: site_coverage
description: Get coverage for a specific site

# Define the resources needed for this pipeline.
resources:
  zones:
  - us-central1-a
  - us-central1-b
  - us-central1-c
  - us-central1-f
  - us-east1-b
  - us-east1-c
  - us-east1-d

  # Create a data disk that is attached to the VM and destroyed when the
  # pipeline terminates.
  disks:
  - name: datadisk
    autoDelete: True

    # Within the Docker container, specify a mount point for the disk.
    mountPoint: /mnt/data

# Specify the Docker image to use along with the command
docker:
  imageName: wenwiliang/regulatorygermline

  # The Pipelines API will create the input directory when localizing files,
  # but does not create the output directory.
  cmd: >
    mkdir /mnt/data/output && 
    find /mnt/data/input && 
    mosdepth -t 4 -b /mnt/data/input/final.uniq.ENCODE.sorted.bed -Q 10 --thresholds 1,10,20,30 /mnt/data/output/${id} /mnt/data/input/*.bam

# The Pipelines API currently supports GCS paths, along with patterns (globs),
# but it doesn't directly support a list of files being passed as a single input
# parameter ("gs://bucket/foo.bam gs://bucket/bar.bam").
inputParameters:
- name: bedfile
  description: Cloud Storage path or pattern to input file(s)
  localCopy:
    path: input/
    disk: datadisk
- name: bamfile
  description: Cloud Storage path
  localCopy:
    path: input/
    disk: datadisk
- name: baifile
  description: Cloud Storage path or pattern to input file(s)
  localCopy:
    path: input/
    disk: datadisk
- name: id
  description: File names

# By specifying an outputParameter, we instruct the pipelines API to
# copy /mnt/data/output/* to the Cloud Storage location specified in
# the pipelineArgs (see below).
outputParameters:
- name: outputPath
  description: Cloud Storage path for where to samtools output
  localCopy:
    path: output/*
    disk: datadisk
